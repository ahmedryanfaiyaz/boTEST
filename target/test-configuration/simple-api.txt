TestConfigurationObject{
	auth=Auth{
		required=null, 
		queryParams=null, 
		headerParams=null, 
		apiKeysPath='null', 
		headersPath='null', 
		oauthPath='null'
	},
	testConfiguration=TestConfiguration{
		operations=[Operation{
			testPath='/search', 
			operationId='search', 
			method='GET', 
			testParameters=[TestParameter{
 				name='query', 
				in='query', 
				weight=1.0, 
				testcases.generators=[Generator{
					type='RandomStringGenerator', 
					genParameters=[GenParameter{
						name='minLength', 
						values=null, 
						objectValues=null
					}, GenParameter{
						name='maxLength', 
						values=null, 
						objectValues=null
					}], 
					valid=true
				}]
			}, TestParameter{
 				name='type', 
				in='query', 
				weight=0.5, 
				testcases.generators=[Generator{
					type='RandomStringGenerator', 
					genParameters=[GenParameter{
						name='minLength', 
						values=null, 
						objectValues=null
					}, GenParameter{
						name='maxLength', 
						values=null, 
						objectValues=null
					}], 
					valid=true
				}]
			}, TestParameter{
 				name='market', 
				in='query', 
				weight=0.5, 
				testcases.generators=[Generator{
					type='RandomStringGenerator', 
					genParameters=[GenParameter{
						name='minLength', 
						values=null, 
						objectValues=null
					}, GenParameter{
						name='maxLength', 
						values=null, 
						objectValues=null
					}], 
					valid=true
				}]
			}], 
			expectedResponse='null'
		}, Operation{
			testPath='/artists/{artistId}', 
			operationId='findArtistById', 
			method='GET', 
			testParameters=[TestParameter{
 				name='artistId', 
				in='path', 
				weight=1.0, 
				testcases.generators=[Generator{
					type='RandomNumberGenerator', 
					genParameters=[GenParameter{
						name='type', 
						values=[integer], 
						objectValues=null
					}, GenParameter{
						name='min', 
						values=null, 
						objectValues=null
					}, GenParameter{
						name='max', 
						values=null, 
						objectValues=null
					}], 
					valid=true
				}]
			}], 
			expectedResponse='null'
		}, Operation{
			testPath='/artists', 
			operationId='getArtists', 
			method='GET', 
			testParameters=[TestParameter{
 				name='name', 
				in='query', 
				weight=0.5, 
				testcases.generators=[Generator{
					type='RandomStringGenerator', 
					genParameters=[GenParameter{
						name='minLength', 
						values=null, 
						objectValues=null
					}, GenParameter{
						name='maxLength', 
						values=null, 
						objectValues=null
					}], 
					valid=true
				}]
			}, TestParameter{
 				name='isAlive', 
				in='query', 
				weight=0.5, 
				testcases.generators=[Generator{
					type='RandomBooleanGenerator', 
					genParameters=[], 
					valid=true
				}]
			}, TestParameter{
 				name='nationality', 
				in='query', 
				weight=0.5, 
				testcases.generators=[Generator{
					type='RandomStringGenerator', 
					genParameters=[GenParameter{
						name='minLength', 
						values=null, 
						objectValues=null
					}, GenParameter{
						name='maxLength', 
						values=null, 
						objectValues=null
					}], 
					valid=true
				}]
			}, TestParameter{
 				name='age', 
				in='query', 
				weight=0.5, 
				testcases.generators=[Generator{
					type='RandomNumberGenerator', 
					genParameters=[GenParameter{
						name='type', 
						values=[integer], 
						objectValues=null
					}, GenParameter{
						name='min', 
						values=null, 
						objectValues=null
					}, GenParameter{
						name='max', 
						values=null, 
						objectValues=null
					}], 
					valid=true
				}]
			}, TestParameter{
 				name='ageUnder', 
				in='query', 
				weight=0.5, 
				testcases.generators=[Generator{
					type='RandomNumberGenerator', 
					genParameters=[GenParameter{
						name='type', 
						values=[integer], 
						objectValues=null
					}, GenParameter{
						name='min', 
						values=null, 
						objectValues=null
					}, GenParameter{
						name='max', 
						values=null, 
						objectValues=null
					}], 
					valid=true
				}]
			}, TestParameter{
 				name='ageOver', 
				in='query', 
				weight=0.5, 
				testcases.generators=[Generator{
					type='RandomNumberGenerator', 
					genParameters=[GenParameter{
						name='type', 
						values=[integer], 
						objectValues=null
					}, GenParameter{
						name='min', 
						values=null, 
						objectValues=null
					}, GenParameter{
						name='max', 
						values=null, 
						objectValues=null
					}], 
					valid=true
				}]
			}], 
			expectedResponse='null'
		}]
	}
}